<Project Sdk="Microsoft.NET.Sdk">

    <!-- General dotnet / C# settings for the project -->
    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
    </PropertyGroup>

    <!-- NuGet package -->
    <PropertyGroup>
        <Version>0.4.0</Version>
        <!-- TODO: Recommended metadata -->
    </PropertyGroup>
    
    <!-- SourceLink -->
    <PropertyGroup>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        
        <!-- Required so compiler-generated sources are included in the PDB -->
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        
        <!-- 
            Build symbol package, which is the preferred way of distributing symbols (over embedding them in the dll),
            see: https://github.com/dotnet/sourcelink/blob/main/README.md#alternative-pdb-distribution
        -->
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    </PropertyGroup>

    <!--
        Deterministic build
            * See: https://github.com/clairernovotny/DeterministicBuilds#deterministic-builds
            * Enables 'official build settings' (as opposed to 'local build settings'), see:
              https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#continuousintegrationbuild
            * One example is file paths for PDB Sources (see Nuget Package Explorer or nuget.info), which will be
              normalized when using 'official build settings', and won't be normalized when using local build settings.
                * This means the debugger can find the files with local build settings, but it also means the build will
                  not be deterministic, because stored file paths then depend on the environment the build was executed
                  in, which makes the build non-deterministic
    -->
    <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    </PropertyGroup>

    <!-- Dependencies -->
    <ItemGroup>
        <!-- TODO: Use the same IncludeAssets as those generated by Rider for SourceLink? -->
        <PackageReference Include="JetBrains.Annotations" Version="2022.3.1" PrivateAssets="all" />
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

</Project>
