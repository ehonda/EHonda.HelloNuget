<Project Sdk="Microsoft.NET.Sdk">

    <!-- General dotnet / C# settings for the project -->
    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <!--
            We want to include JetBrains.Annotations because some of them (e.g. Pure) are intended for consumers of our
            api
        -->
        <DefineConstants>JETBRAINS_ANNOTATIONS</DefineConstants>
    </PropertyGroup>

    <!--
        NuGet package
            * Includes all recommended metadata according to
              https://learn.microsoft.com/en-us/nuget/create-packages/package-authoring-best-practices#package-metadata
    -->
    <PropertyGroup>
        <!--
            * We use `Version` instead of `PackageVersion` because `Version` is the default for a variety of other
              version related MSBuild properties, so we set consistent versions for the various built artifacts (e.g.
              package and assembly file) this way.
            * See (Under "Notes about these settings:"):
              https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#generateassemblyinfo
            * See (Under `PackageVersion`):
              https://learn.microsoft.com/en-us/nuget/reference/msbuild-targets#pack-target-inputs
         -->
        <Version>0.19.0</Version>
        <PackageId>EHonda.HelloNuget</PackageId>
        <Authors>Dennis Renz</Authors>
        <Description>A nuget package to try out best practices with.</Description>
        <Copyright>Copyright (c) Dennis Renz 2023</Copyright>
        <PackageProjectUrl>https://github.com/ehonda/EHonda.HelloNuget</PackageProjectUrl>
        <!--
            Path is relative to the root of the package (see:
            https://learn.microsoft.com/en-us/nuget/reference/msbuild-targets#packagereadmefile) and we also need to
            pack the readme, which is done in the ItemGroup below
        -->
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageTags>sample nuget-best-practices</PackageTags>
        <PackageReleaseNotes>See package release notes on GitHub: https://github.com/ehonda/EHonda.HelloNuget/releases/tag/v0.19.0</PackageReleaseNotes>
        <!--
            License file is the recommended way to include license information (over license file or license url), see:
            https://learn.microsoft.com/en-us/nuget/create-packages/package-authoring-best-practices#if-your-package-is-open-source
        -->
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
    </PropertyGroup>
    
    <!--
        Pack readme file
            * Include path is relative to this .csproj file
            * Package path is the package root, as specified in the PackageReadmeFile metadata element (see above)
            * See: https://learn.microsoft.com/en-us/nuget/reference/msbuild-targets#packagereadmefile
    -->
    <ItemGroup>
        <None Include="..\README.md" Pack="true" PackagePath="\" />
    </ItemGroup>
    
    <!--
        SourceLink / Symbol Package
        
        < net8.0:
        
        For a demo of how to enable full source link functionality in a pre-net8.0 project, see this sample:
            https://github.com/ehonda/EHonda.HelloNuget/blob/0dd6a4632362217f255d004c32fb0bd63efb0233/EHonda.HelloNuget/EHonda.HelloNuget.csproj
            
        >= net8.0:
        
        The documentation (https://github.com/dotnet/sourcelink#using-source-link-in-net-projects) states that we don't
        need to include SourceLink or set properties related to it anymore if we're using the SDK in net8.0 or higher,
        which we can verify (as they check all boxes in nuget.info for package Health) via the following versions
        (together with diffs what was removed) of this package:
        
        * 0.15.0
            * https://nuget.info/packages/EHonda.HelloNuget/0.15.0
            * https://github.com/ehonda/EHonda.HelloNuget/compare/v0.14.0...v0.15.0
        * 0.16.0
            * https://nuget.info/packages/EHonda.HelloNuget/0.16.0
            * https://github.com/ehonda/EHonda.HelloNuget/compare/v0.15.0...v0.16.0
            
        However, (and this is kind of ambiguously documented) we can't remove the properties related to how we want to
        build the symbol package. We can see that the package Health for the version where we removed those properties
        is broken:
        
        * 0.17.0
            * https://nuget.info/packages/EHonda.HelloNuget/0.17.0
            * https://github.com/ehonda/EHonda.HelloNuget/compare/v0.16.0...v0.17.0
    -->
    <PropertyGroup>
        <!-- 
            Build symbol package, which is the preferred way of distributing symbols (over embedding them in the dll),
            see: https://github.com/dotnet/sourcelink/blob/main/README.md#alternative-pdb-distribution
        -->
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    </PropertyGroup>

    <!-- Dependencies -->
    <ItemGroup>
        <!--
            We can't do PrivateAssets="all" for JetBrains.Annotations, because we want to expose them to consumers. It
            does technically work, at least for things like a PureAttribute on a method, but it's unclear whether this
            can have unfavorable consequences (there are certainly ways to make the consumer crash by not having the
            assembly then, e.g. via reflection)
        -->
        <PackageReference Include="JetBrains.Annotations" Version="2023.3.0" />
    </ItemGroup>

</Project>
