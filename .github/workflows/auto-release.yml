name: Automatically release and publish to nuget.org

# TODO: Run automatically
on:
  workflow_dispatch:

jobs:
  get-package-metadata:
    name: Get package metadata
    runs-on: ubuntu-latest
    outputs:
      package-version: ${{ steps.get-package-metadata.outputs.package-version }}
      package-id: ${{ steps.get-package-metadata.outputs.package-id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
      - name: Get package version
        id: get-package-metadata
        run: echo "version=$(dotnet build EHonda.HelloNuget --getProperty:PackageVersion)" >> "$GITHUB_OUTPUT"
      - name: Get package id
        id: get-package-id
        run: echo "package-id=$(dotnet build EHonda.HelloNuget --getProperty:PackageId)" >> "$GITHUB_OUTPUT"

  # TODO: Improvements:
  #         - Check if we're >= any existing version
  check-nuget-exists:
    name: Check nuget.org package exists
    runs-on: ubuntu-latest
    needs: get-package-metadata
    outputs:
      package-exists: ${{ steps.check-nuget-exists.outputs.package-exists }}
    steps:
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
      - name: Check nuget.org package exists
        env:
          PACKAGE_VERSION: ${{ needs.get-package-metadata.outputs.package-version }}
          PACKAGE_ID: ${{ needs.get-package-metadata.outputs.package-id }}
        run: |
          LATEST_PACAKGE=$(nuget list $PACKAGE_ID -Source https://api.nuget.org/v3/index.json)
          LATEST_VERSION=$(echo $LATEST_PACAKGE | awk '{print $NF}')
          if [ "$LATEST_VERSION" == "$PACKAGE_VERSION" ]; then
            echo "package-exists=true" >> $GITHUB_OUTPUT
          else
            echo "package-exists=false" >> $GITHUB_OUTPUT
          fi

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: check-nuget-exists
    if: needs.check-nuget-exists.outputs.package-exists
    steps:
      - run: echo "Release created"
